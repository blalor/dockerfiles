filter {
    ## postfix/anvil
    ## postfix/cleanup
    ## postfix/local
    ## postfix/master
    ## postfix/pickup
    ## postfix/postfix-script
    ## postfix/qmgr
    ## postfix/smtp
    ## postfix/smtpd
    
    if [type] == "syslog" and [program] =~ /^postfix\// {
        if [message] =~ /^warning: / {
            mutate {
                add_tag => [ "warning" ]
            }
        }
        
        ## pull in the queue id
        grok {
            patterns_dir => [ "/etc/logstash/patterns/" ]
            
            match => {
                "message" => "(warning: )?(%{POSTFIX_QUEUEID:queue_id}: )?%{GREEDYDATA:message}"
            }
            
            overwrite => "message"
        }

        if [message] =~ /^reject: / {
            mutate {
                add_tag => [ "security", "breakin", "reject" ]
            }
        }
        
        kv {
            field_split => ", "
        }
        
        if [relay] {
            grok {
                patterns_dir => [ "/etc/logstash/patterns/" ]

                match => [
                    "relay", "%{HOSTNAME_REMOTE_IP}:%{POSINT:port:int}|local"
                ]
            }
        }
        
        if [program] == "postfix/smtpd" {
            grok {
                patterns_dir => [ "/etc/logstash/patterns/" ]

                match => [
                    "message", "%{IP:rip}: address not listed for hostname %{HOSTNAME:hostname}",
                    "message", "%{IP:rip}: hostname %{HOSTNAME:hostname} verification failed:"
                ]
                
                add_tag => [ "security", "breakin" ]
                
                tag_on_failure => "_grokparsefailure_postfix"
            }
            
            if "_grokparsefailure_postfix" in [tags] {
                mutate {
                    remove_tag => [ "_grokparsefailure_postfix" ]
                }

                grok {
                    patterns_dir => [ "/etc/logstash/patterns/" ]

                    match => [
                        "message", "%{HOSTNAME_REMOTE_IP}"
                    ]
                    
                    add_tag => [ "security" ]
                    
                    tag_on_failure => "_grokparsefailure_postfix"
                }
            }
        }
        
        mutate {
            ## consistent naming of message ID fields
            ## a dash in the capture name is illegal in Oniguruma
            rename => { 
                "message-id" => "message_id"
            }
            
            ## remove brackets from various fields
            gsub => [
                ## not sure rename will happen before gsub
                "message-id", "[<>]", "",
                "message_id", "[<>]", "",
                
                "from", "[<>]", "",
                "to", "[<>]", "",
                "orig_to", "[<>]", ""
            ]

            ## strings to numbers
            convert => [
                "delay", "float",
                "nrcpt", "integer",
                "pid", "integer",
                "size", "integer"
            ]
        }
    }
}
