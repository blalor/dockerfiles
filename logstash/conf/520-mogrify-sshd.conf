filter {
    if [type] == "syslog" and [program] == "sshd" {
        
        ## I don't see a better way to do this.  Both are security-related, but
        ## only some are signs of a breakin attempt.  A match in the 2nd block
        ## will have been tagged with _grokparsefailure_ssh by the 1st block.
        
        grok {
            match => [
                "message", "Did not receive identification string from %{IP:rip}",
                "message", "Address %{IP:rip} maps to %{HOSTNAME:hostname}, but this does not map back to the address - POSSIBLE BREAK-IN ATTEMPT!",
                "message", "reverse mapping checking getaddrinfo for %{HOSTNAME:hostname} \[%{IP:rip}\] failed - POSSIBLE BREAK-IN ATTEMPT!",
                "message", "Invalid user %{USERNAME:user} from %{IP:rip}",
                "message", "Disconnecting: Too many authentication failures for %{USERNAME:user}",
                "message", "input_userauth_request: invalid user %{USERNAME:user}",
                "message", "Corrupted MAC on input",
                "message", "Disconnecting: Packet corrupt"
            ]
            
            add_tag => [ "security", "breakin" ]
            
            tag_on_failure => "_grokparsefailure_ssh"
        }
        
        if "_grokparsefailure_ssh" in [tags] {
            mutate {
                remove_tag => [ "_grokparsefailure_ssh" ]
            }

            grok {
                match => [
                    ## Accepted publickey for blalor from 72.74.164.38 port 38741 ssh2
                    "message", "Accepted %{WORD:auth_type} for %{USERNAME:user} from %{IP:rip} port %{POSINT:port:int} %{GREEDYDATA:protocol}",

                    ## Received disconnect from 72.74.164.38: 11: disconnected by user
                    "message", "Received disconnect from %{IP:rip}: (?<code>\d+): %{GREEDYDATA:reason}",
                    
                    "message", "Connection closed by %{IP:rip}",
                    "message", "pam_unix\(sshd:session\): session opened for user %{USERNAME:user} by \(uid=\d+\)",
                    "message", "pam_unix\(sshd:session\): session closed for user %{USERNAME:user}"
                ]
                
                add_tag => [ "security" ]
                
                ## anything not matched will get this tag
                tag_on_failure => "_grokparsefailure_ssh"
            }
        }
        
        ## strings to numbers
        mutate {
            convert => [ "code", "integer" ]
        }
    }
}
